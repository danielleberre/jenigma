/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.0/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'

    // Apply sonarqube analysis
    id "org.sonarqube" version "2.7"

    // Add code coverage
     id 'jacoco'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:28.0-jre'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

application {
    // Define the main class for the application.
    mainClassName = 'jenigma.MainUI'
}

jar {
  manifest {
    attributes(
      'Main-Class': 'jenigma.MainUI'
    )
  }
}

sonarqube {
    properties {
        property "sonar.organization", "danielleberre-github"
        // must be unique in a given SonarQube instance
        property "sonar.projectKey","dlb:jenigma"
        // this is the name and version displayed in the SonarQube UI. Was mandatory prior to SonarQube 6.1.
        property "sonar.projectName","JEnigma"
        property "sonar.projectVersion","0.1"
 
        // Path is relative to the sonar-project.properties file. Replace "\" by "/" on Windows.
        // This property is optional if sonar.modules is set. 
        // property "sonar.sources","src/main/java"
 
        // Encoding of the source code. Default is default system encoding
        property "sonar.sourceEncoding","UTF-8"

        // Additional java settings
        property "sonar.java.binaries","build/classes/java/main/"

        property "sonar.coverage.jacoco.xmlReportPaths","build/reports/jacocoReport.xml"
    }
}

jacoco {
    applyTo run
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        xml.destination file("build/reports/jacocoReport.xml")
    }
}